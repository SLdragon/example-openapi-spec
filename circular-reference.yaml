openapi: 3.0.0
info:
  title: Phone Service
  description: http service to operate phone via http request, such as send message, get contacts, etc
  version: 1.0.0
servers:
  - url: https://phone-plugin-api-bing-mock.azurewebsites.net
paths:
  "/DeviceDataMock/devices/default":
    get:
      operationId: getDeviceInfo
      description: Get device information, like device id, device name, can also be used for get user's location
      responses:
        "200":
          description: OK, successfully get device info
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/DeviceInfo"
        default:
          description: Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorResponse"
  "/DeviceDataMock/devices/default/contacts":
    get:
      operationId: getContactList
      summary: Get contact list from device.
      description: Get contact list from device.
      parameters:
        - name: top
          in: query
          description: The top number of contacts to return, default is 100
          required: false
          schema:
            type: string
        - name: filter
          in: query
          description: The filter used to filter the contacts, currently support filter by name, company and location, such as `filter=name has $contactName`, also it supports `and` and `or` operator, such as `filter=name has $contactName or company has $company`
          required: false
          schema:
            type: string
        - name: name
          in: query
          description: The parameter to filter the contacts by name, such as `name=Tom`
          required: false
          schema:
            type: string
        - name: company
          in: query
          description: The parameter to filter the contacts by company, such as `company=Microsoft`
          required: false
          schema:
            type: string
      responses:
        "200":
          description: OK, successfully get contact list
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ContactListResponse"
        "404":
          description: device id is not found, please tell user to visit https://aka.ms/LinkDevice to link the phone with user's account, and let user to try again
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorResponse"
        default:
          description: Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorResponse"
  "/AIPlugin/support.json":
    get:
      operationId: getSupportInfo
      description: A function, which can get support info of phone plugin
      responses:
        "200":
          description: OK, successfully get support info
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/SupportInfo"
  "/DeviceDataMock/devices/default/messages":
    get:
      operationId: getMessageList
      description: Get all message (SMS or MMS) list of recent 30 days from device.
      parameters:
        - name: top
          in: query
          description: The top number of contacts to return, default is 100
          required: false
          schema:
            type: string
        - name: filter
          in: query
          description: Used to filter the messages, support filter by `read`(read state enum as 'read' or 'unread', supports `eq` operator, like filter=read eq unread), `sender.displayName` (sender's name, supports `has`, `eq` operator, like filter=sender.displayName has $displayName), `sender.phoneNumber` (sender's phone number, supports `has` and `eq` operator, like filter=sender.phoneNumber eq $phoneNumber), `date` (date time of this message with yyyy-MM-dd'T'HH:mm:ss format, supports `lt` and `gt` format, like filter=date gt 2023-05-22T12:22:22), also it supports `and` and `or` operator, such as `filter=sender.displayName has $displayName and read eq unread`
          required: false
          schema:
            type: string
        - name: contactName
          in: query
          description: The parameter to filter the messages by contact name, such as `contactName=Tom`
          required: false
          schema:
            type: string
        - name: contactPhoneNumber
          in: query
          description: The parameter to filter the messages by contact phone number, such as `contactPhoneNumber=+861234567890`
          required: false
          schema:
            type: string
        - name: read
          in: query
          description: The parameter to filter the messages by read state, such as `read=true`
          required: false
          schema:
            type: boolean
        - name: dateBegin
          in: query
          description: The parameter to filter the messages by date begin, such as `dateBegin=2023-05-22T12:22:22`
          required: false
          schema:
            type: string
        - name: dateEnd
          in: query
          description: The parameter to filter the messages by date end, such as `dateEnd=2023-05-22T12:22:22`
          required: false
          schema:
            type: string
      responses:
        "200":
          description: OK, successfully get message list
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/MessageListResponse"
        default:
          description: Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorResponse"
    post:
      operationId: sendMessage
      description: Send message by phone device, before send message, need to double confirm with user firstly for the message content and contact info, after user confirmed, then send the message.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/MessageToSend"
      responses:
        "200":
          description: Successfully sent the message, this operation is successfully finished
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/MessageToSendResponse"
        "202":
          description: Message is being sending, this operation is not finished yet
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/MessageToSendResponse"
        "404":
          description: device id is not found, please tell user to visit https://aka.ms/LinkDevice to link the phone with user's account, and let user to try again
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorResponse"
        "424":
          description: Error occurred when sending message from device
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorResponse"
        default:
          description: Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorResponse"
components:
  securitySchemes:
    Authorization:
      type: http
      description: Authorization token, with bearer, the format is like `Bearer {token}`
      scheme: bearer
  schemas:
    Recipient:
      type: object
      properties:
        phoneNumber:
          type: string
          description: The phone number of this recipient
        contactId:
          type: string
          description: The contactId of this recipient if it's known Contact.
    SupportInfo:
      type: object
      properties:
        email:
          type: string
          nullable: true
          description: Email address that can be used for seeking assistance or providing feedback.
        how_to_link_device:
          type: string
          nullable: true
          description: Guidance about how to link device.
        how_to_unlink_device:
          type: string
          nullable: true
          description: Guidance about how to unlink device.
    Contact:
      type: object
      properties:
        id:
          type: string
          description: The unique identifier of this contact.
        displayName:
          type: string
          description: The DisplayName items of this contact.
        lastName:
          type: string
          description: The LastName items of this contact.
        firstName:
          type: string
          description: The FirstName items of this contact.
        phoneNumberItems:
          type: array
          description: The phone number items of this contact.
          items:
            allOf:
              - "$ref": "#/components/schemas/PhoneNumberItem"
        lastModifiedDateTime:
          type: string
          description: The date time that this contact was last modified.
          format: date-time
        thumbnail:
          type: string
          description: The thumbnail of this contact.
    PhoneNumberItem:
      type: object
      properties:
        id:
          type: string
          description: The unique identifier of this PhoneNumberItem.
        type:
          type: string
          description: The Type items of this PhoneNumberItem.
        contactId:
          type: string
          description: The ContactId items of this PhoneNumberItem.
        displayValue:
          type: string
          description:
            The DisplayValue items of this PhoneNumberItem,The phone number
            as the user entered it
        value:
          type: string
          description:
            The Value items of this PhoneNumberItem,The phone number's
            E164 representation. (Country code + subscriber number)
    DeviceInfo:
      type: object
      properties:
        id:
          type: string
          nullable: true
          description: The unique identifier of the device id.
        name:
          type: string
          nullable: true
          description: The name of this device.
          example: Tom\'s SmartPhone
        wifiOn:
          type: boolean
          nullable: true
          description: Gets or sets a value indicating whether wifi is on.
        allowCellularData:
          type: boolean
          nullable: true
          description:
            Gets or sets a value indicating whether allow using cellular
            data by YPC.
        location:
          type: string
          nullable: true
          description: The string representation of the location of this device.
    MessageToSend:
      type: object
      required:
        - text
        - phoneNumber
        - displayName
      properties:
        text:
          type: string
          description: The Text content of this message.
        phoneNumber:
          type: string
          description: The phone number of this recipient.
        displayName:
          type: string
          description: The display name of this recipient.
    MessageToSendResponse:
      type: object
      properties:
        conversationId:
          type: string
          description: The conversation id of the message on the phone
    Message:
      type: object
      properties:
        id:
          type: string
          description: The unique identifier of this message.
        type:
          type: string
          description: The message type of this message, should be SMS or MMS.
          enum:
            - SMS
            - MMS
        state:
          type: string
          description: The State of this message, should be one of the following values.
          enum:
            - UNKNOWN
            - INBOX
            - SENT
            - DRAFT
            - OUTBOX
            - FAILED
            - QUEUED
        sender:
          type: object
          allOf:
            - "$ref": "#/components/schemas/Recipient"
          description: The sender of this message.
        recipients:
          type: array
          description: The recipients of this message.
          items:
            allOf:
              - "$ref": "#/components/schemas/Recipient"
        lastModifiedDateTime:
          type: string
          description: The date time that this message was last modified.
          format: date-time
        read:
          type: boolean
          description: The message is read by user or not. If true, means the message is read by user, if false, means this message is unread.
        subject:
          type: string
          description: The subject of the message.
        conversationId:
          type: string
          description: conversation id of this message.
    SMSMessage:
      allOf:
        - "$ref": "#/components/schemas/Message"
          type: object
      type: object
      properties:
        body:
          type: string
          description: The content of this SMS message.
    MessageListResponse:
      type: object
      properties:
        value:
          type: array
          description: The value to be listed for the messages.
          items:
            oneOf:
              - "$ref": "#/components/schemas/SMSMessage"
        nextLink:
          type: string
          description: If there's more item to fetch, it will return a nextLink url, the response will be same as this one.
        deltaLink:
          type: string
          description: If there's no more items to fetch, it will return a deltaLink url for client to call for delta changes.
    ContactListResponse:
      type: object
      properties:
        value:
          type: array
          description: The value to be listed for the contacts, it is an array of Contact object.
          items:
            oneOf:
              - "$ref": "#/components/schemas/Contact"
    ErrorResponse:
      type: object
      description: Error information.
      properties:
        error:
          "$ref": "#/components/schemas/ODataError"
    ODataError:
      type: object
      description: Error information in OData format
      properties:
        code:
          type: string
          description:
            If is 'DeviceNotPaired', this means user did not link the device
            with user's account, please tell user to visit https://aka.ms/LinkDevice to
            link the phone with user's account, and let user to try again.
        message:
          type: string
          description: The human-readable description of the error.
            If the description is related to 'Dispatcher service is failed to send wake notification', please tell user to visit https://aka.ms/LinkDevice to link the phone with user's account, and let user to try again.
        categoryCode:
          type: integer
          format: int64
          description:
            Category of the error that will help clients in knowing what
            to do with this error.
        details:
          type: array
          items:
            "$ref": "#/components/schemas/ODataError"
          description: Inner errors that caused this error.
