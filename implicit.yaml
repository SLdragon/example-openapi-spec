openapi: 3.0.4
info:
  title: Swagger Petstore - OpenAPI 3.0 - Subset
  description: "This is a sample Pet Store Server based on the OpenAPI 3.0 specification.  You can find out more about\nSwagger at [http://swagger.io](http://swagger.io). In the third iteration of the pet store, we've switched to the design first approach!\nYou can now help us improve the API whether it's by making changes to the definition itself or to the code.\nThat way, with time, we can improve the API in general, and expose some of the new features in OAS3.\n\nSome useful links:\n- [The Pet Store repository](https://github.com/swagger-api/swagger-petstore)\n- [The source API definition for the Pet Store](https://github.com/swagger-api/swagger-petstore/blob/master/src/main/resources/openapi.yaml)"
  termsOfService: http://swagger.io/terms/
  contact:
    email: apiteam@swagger.io
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.17
servers:
  - url: https://petstore3.swagger.io/api/v3
paths:
  '/pet/{petId}':
    delete:
      tags:
        - pet
      summary: Deletes a pet
      description: ''
      operationId: deletePet
      parameters:
        - name: api_key
          in: header
          description: ''
          schema:
            type: string
        - name: petId
          in: path
          description: Pet id to delete
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    format: int32
                  type:
                    type: string
                  message:
                    type: string
                xml:
                  name: '##default'
      security:
        - petstore_auth:
            - write:pets
            - read:pets
  '/pet/{petId}/uploadImage':
    post:
      tags:
        - pet
      summary: uploads an image
      description: ''
      operationId: uploadFile
      parameters:
        - name: petId
          in: path
          description: ID of pet to update
          required: true
          schema:
            type: integer
            format: int64
        - name: additionalMetadata
          in: query
          description: Additional Metadata
          explode: false
          schema:
            type: string
      requestBody:
        content:
          application/octet-stream:
            schema:
              type: string
              format: binary
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    format: int32
                  type:
                    type: string
                  message:
                    type: string
                xml:
                  name: '##default'
      security:
        - petstore_auth:
            - write:pets
            - read:pets
  '/store/order/{orderId}':
    get:
      tags:
        - store
      summary: Find purchase order by ID
      description: For valid response try integer IDs with value <= 5 or > 10. Other values will generate exceptions.
      operationId: getOrderById
      parameters:
        - name: orderId
          in: path
          description: ID of order that needs to be fetched
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/xml:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    format: int64
                    example: 10
                  petId:
                    type: integer
                    format: int64
                    example: 198772
                  quantity:
                    type: integer
                    format: int32
                    example: 7
                  shipDate:
                    type: string
                    format: date-time
                  status:
                    enum:
                      - placed
                      - approved
                      - delivered
                    type: string
                    description: Order Status
                    example: approved
                  complete:
                    type: boolean
                xml:
                  name: order
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    format: int64
                    example: 10
                  petId:
                    type: integer
                    format: int64
                    example: 198772
                  quantity:
                    type: integer
                    format: int32
                    example: 7
                  shipDate:
                    type: string
                    format: date-time
                  status:
                    enum:
                      - placed
                      - approved
                      - delivered
                    type: string
                    description: Order Status
                    example: approved
                  complete:
                    type: boolean
                xml:
                  name: order
    delete:
      tags:
        - store
      summary: Delete purchase order by ID
      description: For valid response try integer IDs with value < 1000. Anything above 1000 or nonintegers will generate API errors
      operationId: deleteOrder
      parameters:
        - name: orderId
          in: path
          description: ID of the order that needs to be deleted
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/xml:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    format: int64
                    example: 10
                  petId:
                    type: integer
                    format: int64
                    example: 198772
                  quantity:
                    type: integer
                    format: int32
                    example: 7
                  shipDate:
                    type: string
                    format: date-time
                  status:
                    enum:
                      - placed
                      - approved
                      - delivered
                    type: string
                    description: Order Status
                    example: approved
                  complete:
                    type: boolean
                xml:
                  name: order
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    format: int64
                    example: 10
                  petId:
                    type: integer
                    format: int64
                    example: 198772
                  quantity:
                    type: integer
                    format: int32
                    example: 7
                  shipDate:
                    type: string
                    format: date-time
                  status:
                    enum:
                      - placed
                      - approved
                      - delivered
                    type: string
                    description: Order Status
                    example: approved
                  complete:
                    type: boolean
                xml:
                  name: order
        
components:
  securitySchemes:
    petstore_auth:
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://petstore.swagger.io/oauth/authorize
          scopes:
            write:pets: modify pets in your account
            read:pets: read your pets

